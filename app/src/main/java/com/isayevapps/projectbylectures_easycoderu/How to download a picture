val imageView = findViewById<ImageView>(R.id.imageView)
        val netImage = NetImage(URL, object : ImageCallback {
            override fun success(bitmap: Bitmap) {
                imageView.setImageBitmap(bitmap)
            }

            override fun failed() {
                Snackbar.make(imageView, "Failed", Snackbar.LENGTH_SHORT).show()
            }

        })
        netImage.start()
       
class NetImage(
    private val url: String,
    private val callback: ImageCallback
) : Thread() {

    override fun run() {
        super.run()
        try {
            val connection = URL(url).openConnection()
            connection.doInput = true
            connection.connect()
            connection.getInputStream().use {
                callback.success(BitmapFactory.decodeStream(it))
            }
        } catch (e: Exception) {
            callback.failed()
        }
    }
}


interface ImageCallback {
    fun success(bitmap: Bitmap)
    fun failed()
}